[
["index.html", "MIMIC III Chapter 1 Introduction", " MIMIC III Yaotian Dai 11/23/2019 Chapter 1 Introduction "],
["data-sources.html", "Chapter 2 Data sources", " Chapter 2 Data sources Resources: MIMIC-III v1.4 Johnson, A., Pollard, T., Mark, R. (2016). MIMIC-III Clinical Database. PhysioNet. doi:10.13026/C2XW26 Johnson, A. E. W., Pollard, T. J., Shen, L., Lehman, L. H., Feng, M., Ghassemi, M., Moody, B., Szolovits, P., Celi, L. A., &amp; Mark, R. G. (2016). MIMIC-III, a freely accessible critical care database. Scientific Data, 3, 160035. Goldberger AL, Amaral LAN, Glass L, Hausdorff JM, Ivanov PCh, Mark RG, Mietus JE, Moody GB, Peng C-K, Stanley HE. PhysioBank, PhysioToolkit, and PhysioNet: Components of a New Research Resource for Complex Physiologic Signals (2003). Circulation. 101(23):e215-e220. From the website “https://physionet.org/content/mimiciii/1.4/”, MIMIC-III is a large, freely-available database comprising deidentified health-related data associated with over forty thousand patients who stayed in critical care units of the Beth Israel Deaconess Medical Center between 2001 and 2012. The database includes information such as demographics, vital sign measurements made at the bedside (~1 data point per hour), laboratory test results, procedures, medications, caregiver notes, imaging reports, and mortality (including post-hospital discharge). To compare the 30-day mortality after accepted to ICU and other factorts, we used the admissions table, patients table, ICUstays table and DIAGNOSES_ICD table. We merged different table by SUBJECT id, which is one admission to hospital and HADM id, which is unique to each patient. "],
["data-transformation.html", "Chapter 3 Data transformation", " Chapter 3 Data transformation library(readr) CALLOUT &lt;- read_csv(&quot;data/CALLOUT.csv&quot;) ## Parsed with column specification: ## cols( ## .default = col_double(), ## SUBMIT_CAREUNIT = col_character(), ## CURR_CAREUNIT = col_character(), ## CALLOUT_SERVICE = col_character(), ## CALLOUT_STATUS = col_character(), ## CALLOUT_OUTCOME = col_character(), ## ACKNOWLEDGE_STATUS = col_character(), ## CREATETIME = col_datetime(format = &quot;&quot;), ## UPDATETIME = col_datetime(format = &quot;&quot;), ## ACKNOWLEDGETIME = col_datetime(format = &quot;&quot;), ## OUTCOMETIME = col_datetime(format = &quot;&quot;), ## FIRSTRESERVATIONTIME = col_datetime(format = &quot;&quot;), ## CURRENTRESERVATIONTIME = col_datetime(format = &quot;&quot;) ## ) ## See spec(...) for full column specifications. "],
["data-transformation-1.html", "Chapter 4 Data transformation", " Chapter 4 Data transformation Yaotian Dai #read in data # Read in synthetic data admissions&lt;-read.csv(&quot;data/ADMISSIONS.csv&quot;) patients&lt;-read.csv(&quot;data/PATIENTS.csv&quot;) #admissions &lt;- admissions[complete.cases(admissions),] #patients &lt;- patients[complete.cases(patients),] icu_stay &lt;- read.csv(&quot;data/ICUSTAYS.csv&quot;) #icu_stay &lt;- icu_stay[complete.cases(icu_stay), ] create the combine DF and add location, race, insurance, gender, first service fst_service &lt;- icu_stay[, c(&quot;SUBJECT_ID&quot;, &quot;HADM_ID&quot;, &quot;ICUSTAY_ID&quot;, &quot;FIRST_CAREUNIT&quot;, &quot;LOS&quot;)] loc_race_insur &lt;- admissions[,c(&quot;SUBJECT_ID&quot;,&quot;HADM_ID&quot;,&quot;ADMISSION_LOCATION&quot;,&quot;INSURANCE&quot;,&quot;ETHNICITY&quot;,&quot;ADMITTIME&quot;,&quot;DEATHTIME&quot;)] patient_gender &lt;- patients[,c(&quot;SUBJECT_ID&quot;,&quot;GENDER&quot;,&quot;DOB&quot;)] loc_race_insur$ADMISSION_LOCATION&lt;-fct_collapse(loc_race_insur$ADMISSION_LOCATION, Emergencyroom =c(&quot;EMERGENCY ROOM ADMIT&quot;), Transfer=c(&quot;TRANSFER FROM HOSP/EXTRAM&quot;,&quot;TRANSFER FROM OTHER HEALT&quot;,&quot;TRANSFER FROM SKILLED NUR&quot;,&quot;TRSF WITHIN THIS FACILITY&quot;), Outpatient=c(&quot;** INFO NOT AVAILABLE **&quot;,&quot;CLINIC REFERRAL/PREMATURE&quot;,&quot;HMO REFERRAL/SICK&quot;,&quot;PHYS REFERRAL/NORMAL DELI&quot;)) loc_race_insur$ETHNICITY&lt;-fct_collapse(loc_race_insur$ETHNICITY, Asian=c(levels(loc_race_insur$ETHNICITY)[3:12]), Black=c(levels(loc_race_insur$ETHNICITY)[13:16]), White=c(levels(loc_race_insur$ETHNICITY)[37:41]), Unknown=c(levels(loc_race_insur$ETHNICITY)[35:36]), Other=c(levels(loc_race_insur$ETHNICITY)[c(1:2,17:34)])) loc_race_insur$INSURANCE&lt;-fct_collapse(loc_race_insur$INSURANCE,Medicareonly=c(&quot;Medicare&quot;), Private=c(&quot;Private&quot; ,&quot;Self Pay&quot;), &quot;Medicaid/other&quot;=c(&quot;Government&quot;, &quot;Medicaid&quot;)) ms_fst_service &lt;- fst_service[fst_service$FIRST_CAREUNIT == &quot;MICU&quot; | fst_service$FIRST_CAREUNIT == &quot;SICU&quot;, ] ms_fst_service &lt;- ms_fst_service[ms_fst_service$LOS &gt;= 1/6, ] ms_fst_service &lt;- ms_fst_service[, c(&quot;SUBJECT_ID&quot;, &quot;HADM_ID&quot;, &quot;ICUSTAY_ID&quot;, &quot;FIRST_CAREUNIT&quot;)] ms_fst_service &lt;- ms_fst_service[!duplicated(ms_fst_service[, &quot;SUBJECT_ID&quot;]), ] loc_race_insur&lt;-loc_race_insur[!duplicated(loc_race_insur$SUBJECT_ID),] comb&lt;-inner_join(loc_race_insur,patient_gender,by=&quot;SUBJECT_ID&quot;) comb &lt;- inner_join(ms_fst_service,comb, by=c(&quot;HADM_ID&quot;,&quot;SUBJECT_ID&quot;)) #add 30 day mortailty to DF death_time&lt;-ymd_hms(comb$DEATHTIME) admit_time&lt;-ymd_hms(comb$ADMITTIME) mortality_thirty&lt;-(death_time-admit_time)/86400 comb$mortality_time&lt;-mortality_thirty comb=within(comb,{mortality_withinthirtydays=ifelse(mortality_time&lt;30,&quot;1&quot;,&quot;0&quot;)}) comb$mortality_withinthirtydays[is.na(comb$mortality_withinthirtydays)] &lt;- 0 #add age to DF #convert admittime,deathtime,dob for format year-month-day-hour-min-seconds #to normal format admitdate &lt;- ymd_hms(comb$ADMITTIME) deathdate &lt;- ymd_hms(comb$DEATHTIME) birthdate &lt;- ymd_hms(comb$DOB) #take the difference, divide by 365, round it to get years as unit comb$age &lt;- round((difftime(admitdate,birthdate,units=&quot;days&quot;))/365.242) #comb$timedf &lt;- round((difftime(deathdate,birthdate,units=&quot;days&quot;))/365.242) #remove rows when people&#39;s age under 18 comb &lt;- subset(comb, comb$age&gt;=18) comb$age &lt;- as.numeric(comb$age) #create a new column named AGE to seperate age by range comb$AGE &lt;- ifelse(comb$age&lt;46,&quot;&lt;=45&quot;, ifelse(comb$age&gt;45 &amp; comb$age&lt;66,&quot;46-65&quot;, ifelse(comb$age&gt;65 &amp; comb$age&lt;81,&quot;66-80&quot;, ifelse(comb$age&gt;80,&quot;81+&quot;, NA)))) comb$AGE &lt;- as.factor(comb$AGE) #remove age comb$age &lt;- NULL #add comorbidities to DF ICD&lt;-read.csv(&quot;data/DIAGNOSES_ICD.csv&quot;) ICD&lt;-ICD[complete.cases(ICD),] COM&lt;-ICD[,c(&quot;SUBJECT_ID&quot;,&quot;ICD9_CODE&quot;)] COM_CHF &lt;- COM[COM$ICD9_CODE %in% c(&quot;39891&quot;, &quot;40201&quot;, &quot;40211&quot;, &quot;40291&quot;,&quot;40401&quot;, &quot;40403&quot;, &quot;40411&quot;, &quot;40413&quot;,&quot;40491&quot;, &quot;40493&quot;, 4254:4259,4280:4289) ,] COM_CHF&lt;-COM_CHF[!duplicated(COM_CHF$SUBJECT_ID),] COM_CHF$DISEASE &lt;- as.factor(&quot;Congestive heart failure&quot;) COM_CHF&lt;- COM_CHF[,c(&quot;SUBJECT_ID&quot;,&quot;DISEASE&quot;)] COM_AM &lt;- COM[COM$ICD9_CODE %in% c(1400:1729, 1740:1958,2000:2089, &quot;2386&quot;) ,] COM_AM&lt;-COM_AM[!duplicated(COM_AM$SUBJECT_ID),] COM_AM$DISEASE &lt;- as.factor(&quot;Any malignancy&quot;) COM_AM&lt;- COM_AM[,c(&quot;SUBJECT_ID&quot;,&quot;DISEASE&quot;)] COM_BOTH &lt;-inner_join(COM_AM,COM_CHF,by=c(&quot;SUBJECT_ID&quot;)) COM_BOTH&lt;- COM_BOTH[,c(&quot;SUBJECT_ID&quot;,&quot;DISEASE.x&quot;,&quot;DISEASE.y&quot;)] COM_BOTH$DISEASE &lt;- as.factor(&quot;BOTH&quot;) COM_BOTH&lt;- COM_BOTH[,c(&quot;SUBJECT_ID&quot;,&quot;DISEASE&quot;)] COM_ALL &lt;- full_join(COM_AM,COM_CHF,by=&quot;SUBJECT_ID&quot;) COM_OTHER &lt;- anti_join(COM,COM_ALL,by=&quot;SUBJECT_ID&quot;) COM_OTHER &lt;- COM_OTHER[!duplicated(COM_OTHER$SUBJECT_ID),] COM_OTHER$DISEASE &lt;- as.factor(&quot;OTHER&quot;) COM_OTHER&lt;- COM_OTHER[,c(&quot;SUBJECT_ID&quot;,&quot;DISEASE&quot;)] COM1 &lt;- anti_join(COM_CHF,COM_BOTH,by=&quot;SUBJECT_ID&quot;) COM2 &lt;- anti_join(COM_AM,COM_BOTH,by=&quot;SUBJECT_ID&quot;) COM_DISEASE &lt;- rbind(COM1,COM2,COM_OTHER,COM_BOTH) comb&lt;-inner_join(comb,COM_DISEASE,by=c(&quot;SUBJECT_ID&quot;)) "],
["missing-values.html", "Chapter 5 Missing values", " Chapter 5 Missing values Yaotian Dai admissions&lt;-read.csv(&#39;C:/Users/pudon/Desktop/class/data visualization/final_project/MIMICIII_visualization/data/ADMISSIONS.csv&#39;) patients&lt;-read.csv(&quot;C:/Users/pudon/Desktop/class/data visualization/final_project/MIMICIII_visualization/data/PATIENTS.csv&quot;) icu_stay &lt;- read.csv(&quot;C:/Users/pudon/Desktop/class/data visualization/final_project/MIMICIII_visualization/data/ICUSTAYS.csv&quot;) ICD&lt;-read.csv(&quot;C:/Users/pudon/Desktop/class/data visualization/final_project/MIMICIII_visualization/data/DIAGNOSES_ICD.csv&quot;) admissions[admissions==&quot;&quot;] &lt;- NA colSums(is.na(admissions)) ## ROW_ID SUBJECT_ID HADM_ID ## 0 0 0 ## ADMITTIME DISCHTIME DEATHTIME ## 0 0 53122 ## ADMISSION_TYPE ADMISSION_LOCATION DISCHARGE_LOCATION ## 0 0 0 ## INSURANCE LANGUAGE RELIGION ## 0 25332 458 ## MARITAL_STATUS ETHNICITY EDREGTIME ## 10128 0 28099 ## EDOUTTIME DIAGNOSIS HOSPITAL_EXPIRE_FLAG ## 28099 25 0 ## HAS_CHARTEVENTS_DATA ## 0 missmap(admissions) visna(admissions, sort=&quot;b&quot;) EDREGTIME, EDOUTTIME are time that the patient was registered and discharged from the emergency department. Basically, we are not interested in these columns, so they don’t have influence on our project. patients[patients==&quot;&quot;] &lt;- NA colSums(is.na(patients)) ## ROW_ID SUBJECT_ID GENDER DOB DOD DOD_HOSP ## 0 0 0 0 30761 36546 ## DOD_SSN EXPIRE_FLAG ## 33142 0 missmap(patients) visna(patients, sort=&quot;b&quot;) DOD is the date of death for the given patient. DOD_HOSP is the date of death as recorded in the hospital database. DOD_SSN is the date of death from the social security database. Is a patient do not die, then we don’t have data in these columns. # No missing data in icu_stay icu_stay[icu_stay==&quot;&quot;] &lt;- NA colSums(is.na(icu_stay)) ## ROW_ID SUBJECT_ID HADM_ID ICUSTAY_ID DBSOURCE ## 0 0 0 0 0 ## FIRST_CAREUNIT LAST_CAREUNIT FIRST_WARDID LAST_WARDID INTIME ## 0 0 0 0 0 ## OUTTIME LOS ## 10 10 missmap(icu_stay) #No missing data in ICD ICD[ICD==&quot;&quot;] &lt;- NA colSums(is.na(ICD)) ## ROW_ID SUBJECT_ID HADM_ID SEQ_NUM ICD9_CODE ## 0 0 0 47 47 missmap(ICD) comb[comb==&quot;&quot;] &lt;- NA colSums(is.na(comb)) ## SUBJECT_ID HADM_ID ## 0 0 ## ICUSTAY_ID FIRST_CAREUNIT ## 0 0 ## ADMISSION_LOCATION INSURANCE ## 0 0 ## ETHNICITY ADMITTIME ## 0 0 ## DEATHTIME GENDER ## 16997 0 ## DOB mortality_time ## 0 16997 ## mortality_withinthirtydays AGE ## 0 0 ## DISEASE ## 0 missmap(comb) visna(comb, sort=&quot;b&quot;) We can see that all the missing data are in DEATHTIME and mortality_time. This is because not all the patients die and those who are alive don’t have DEATHTIME and mortality_time. "],
["results.html", "Chapter 6 Results", " Chapter 6 Results Yaotian Dai #Some basic graphs ggplot(comb,aes(x = GENDER))+geom_bar()+ ggtitle(&quot;Amount of female patients and male patients accepted to ICU&quot;) ggplot(comb, aes(x = AGE))+geom_bar()+ ggtitle(&quot;Amount of patients of diffent age groups accepted to ICU&quot;) ggplot(comb, aes(x = mortality_withinthirtydays))+geom_bar()+ ggtitle(&quot;Amount of patients of die and alive within 30 days after accepted to ICU&quot;) ggplot(comb, aes(x = ETHNICITY))+geom_bar()+ ggtitle(&quot;Amount of patients of different Ethnicity accepted to ICU&quot;) ggplot(comb, aes(x = INSURANCE))+geom_bar()+ ggtitle(&quot;Amount of patients of different Insurance after accepted to ICU&quot;) ggplot(comb, aes(x = ADMISSION_LOCATION))+geom_bar()+ ggtitle(&quot;Amount of patients of different admission location before accepted to ICU&quot;) Trying to find some patterns between mortality within 30 days and different factors h2 = comb$ETHNICITY h1 = comb$mortality_withinthirtydays df &lt;- data_frame(h2,h1)%&gt;%drop_na() ggplot(comb,aes(h1,fill=h2))+geom_bar(position = &quot;fill&quot;)+coord_flip()+ylab(&quot;Percentage&quot;)+xlab(&quot;die within 30 days&quot;)+theme(legend.position=&quot;right&quot;)+theme(legend.title = element_blank())+ggtitle(&quot;Percentage of patients divided by Ethnicity &quot;)+theme(plot.title = element_text(hjust = 0.5)) table2 &lt;- table(comb$ETHNICITY) prop.table(table2) ## ## Other Asian Black Unknown White ## 0.07037429 0.02916730 0.10105284 0.08639363 0.71301194 h2 = comb$GENDER h1 = comb$mortality_withinthirtydays df &lt;- data_frame(h2,h1)%&gt;%drop_na() ggplot(comb,aes(h1,fill=h2))+geom_bar(position = &quot;fill&quot;)+coord_flip()+ylab(&quot;Percentage&quot;)+xlab(&quot;die within 30 days&quot;)+theme(legend.position=&quot;right&quot;)+theme(legend.title = element_blank())+ggtitle(&quot;Percentage of patients die and alive within 30 days divided by Gender&quot;)+theme(plot.title = element_text(hjust = 0.5)) h2 = comb$INSURANCE h1 = comb$mortality_withinthirtydays df &lt;- data_frame(h2,h1)%&gt;%drop_na() ggplot(comb,aes(h1,fill=h2))+geom_bar(position = &quot;fill&quot;)+coord_flip()+ylab(&quot;Percentage&quot;)+xlab(&quot;die within 30 days&quot;)+theme(legend.position=&quot;right&quot;)+theme(legend.title = element_blank())+ggtitle(&quot;Percentage of patients die and alive within 30 days divided by Insurance type&quot;)+theme(plot.title = element_text(hjust = 0.5)) h2 = comb$DISEASE h1 = comb$mortality_withinthirtydays df &lt;- data_frame(h2,h1)%&gt;%drop_na() ggplot(comb,aes(h1,fill=h2))+geom_bar(position = &quot;fill&quot;)+coord_flip()+ylab(&quot;Percentage&quot;)+xlab(&quot;die within 30 days&quot;)+theme(legend.position=&quot;right&quot;)+theme(legend.title = element_blank())+ggtitle(&quot;Percentage of patients die and alive within 30 days divided by Disease type&quot;)+theme(plot.title = element_text(hjust = 0.5)) h2 = comb$ADMISSION_LOCATION h1 = comb$mortality_withinthirtydays df &lt;- data_frame(h2,h1)%&gt;%drop_na() ggplot(comb,aes(h1,fill=h2))+geom_bar(position = &quot;fill&quot;)+coord_flip()+ylab(&quot;Percentage&quot;)+xlab(&quot;die within 30 days&quot;)+theme(legend.position=&quot;right&quot;)+theme(legend.title = element_blank())+ggtitle(&quot;Percentage of patients die and alive within 30 days divided by differenct Admission Location&quot;)+theme(plot.title = element_text(hjust = 0.5)) ggplot(data = comb)+ geom_mosaic(aes(x = product(mortality_withinthirtydays,INSURANCE)), na.rm = TRUE)+ labs(x = &quot;Insurance type&quot;, y = &quot;mortality_withinthirtydays&quot;) ggplot(data = comb)+ geom_mosaic(aes(x = product(mortality_withinthirtydays,ADMISSION_LOCATION)), na.rm = TRUE)+ labs(x = &quot;ADMISSION_LOCATION&quot;, y =&quot;mortality_withinthirtydays&quot; ) ggplot(data = comb)+ geom_mosaic(aes(x = product(mortality_withinthirtydays,DISEASE)), na.rm = TRUE)+ labs(x = &quot;DISEASE&quot;, y = &quot;mortality_withinthirtydays&quot;) ggplot(data = comb)+ geom_mosaic(aes(x = product(mortality_withinthirtydays, ADMISSION_LOCATION), fill= mortality_withinthirtydays), na.rm = TRUE)+ labs(x = &quot;ADMISSION_LOCATION&quot;, y = &quot;mortality_withinthirtydays&quot;)+ facet_grid(INSURANCE~.) ggplot(data = comb)+ geom_mosaic(aes(x = product(mortality_withinthirtydays, INSURANCE), fill= mortality_withinthirtydays), na.rm = TRUE)+ labs(x = &quot;Ethnicity&quot;, y = &quot;mortality_withinthirtydays&quot;)+ facet_grid(ADMISSION_LOCATION~.) ggplot(data = comb)+ geom_mosaic(aes(x = product(ADMISSION_LOCATION, INSURANCE), fill= ADMISSION_LOCATION), na.rm = TRUE)+ labs(x = &quot;Insurance Type&quot;, y =&quot;Admission Location&quot; )+ facet_grid(mortality_withinthirtydays~.) "],
["interactive-component.html", "Chapter 7 Interactive component", " Chapter 7 Interactive component "],
["conclusion.html", "Chapter 8 Conclusion", " Chapter 8 Conclusion Evaluate the factors that have an impact on 30-Day Mortality of Patients Admitted to the Intensive Care Unit (ICU) From the basic graphs, we can see how many patients of different gender, ages, ethnicity, admission location, and insurance type are accepted to ICU. They also show how many patients are dead within 30 days of their admission to ICU. We can see that first, the gender distribution is fairly even. Second, we have more patients with age higher than 45, and this is normal since older people are more likely to have emergent conditions. Third, we have more white patients who could cause some bias on ethnicity, and we will pay attention to this problem later. The portion of white patients is 71%. Fourth, we have more patients who have only Medicare, and more patients are from the emergency room directly. Finally, many more patients are alive within 30 days accepted to ICU. This is also normal because ICU saves people, not killing them. Then we want to find some patterns between factors that have an impact on 30-Day Mortality. First, we do not see some obvious patterns between ethnicity and 30-Day Mortality. The portion of each ethnicity is about the same as the portion of each ethnicity patients. The Gender shows the same pattern. However, for insurance type and admission location, we can see some patterns. More patients with Medicare and more patients who are transferred from other hospitals only die within 30 days. Finally, we want to see more detail between insurance type, admission location, and 30-Day Mortality. From the graphs, we can see that no matter the insurance type, transferred patients have the highest mortality rate, and no matter the admission rate, patients with Medicare only have the highest mortality rate. Therefore, we conclude that admission location and insurance type have impact on 30-Day Mortality of patients. Transferred patients and Medicare only patients have a higher mortality rate. This is partly because, as ICU patients, transferring from one hospital to a better hospital can waster a lot of precious time and cause higher Mortality. On the other hand, Medicare only patients tend to have lower income and lower living conditions, which may cause them to lose the best time to save lives. library(tidyverse) library(ggplot2) df&lt;-read.csv(&quot;data/PATIENTS.csv&quot;) DeathY=df$DOD_HOSP BirthY=df$DOB #Data Cleaning DeathY&lt;-substr(DeathY,1,4) BirthY&lt;-substr(BirthY,1,4) DeathY&lt;-as.numeric(DeathY) BirthY&lt;-as.numeric(BirthY) df$DOD&lt;-DeathY df$DOB&lt;-BirthY df&lt;-na.omit(df) df$LifeSpan&lt;-(df$DOD-df$DOB) df&lt;-subset(df,LifeSpan&lt;100&amp;LifeSpan&gt;0) #ggplot(df,aes(df$LifeSpan))+geom_bar()+facet_wrap(df$GENDER) "]
]
